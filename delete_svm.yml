#!/usr/bin/env ansible-playbook

################################################################################
#
# Title:        delete_svm.yml 
# Author:       Adrian Bronder (modified Ronald Feist)
# Date:         2020-03-20
# Description:  Clean up the entire environment
#               with Ansible modules
#
# Modules:      na_ontap_info
#               na_ontap_volume
#               na_ontap_cifs_server
#               na_ontap_svm
#
# URLs:         http://docs.netapp.com/ontap-9/index.jsp
#               https://galaxy.ansible.com/netapp/ontap
#
# Built-in help:
# ansible-doc netapp.ontap.na_ontap_info
# ansible-doc netapp.ontap.na_ontap_volume
# ansible-doc netapp.ontap.na_cifs_server
# ansible-doc netapp.ontap.na_ontap_svm
#
################################################################################

- hosts: localhost
  gather_facts: false
  vars:
    input: &input
      hostname:       "{{ PRI_CLU }}"
      username:       "{{ PRI_CLU_USER }}"
      password:       "{{ PRI_CLU_PASS }}"
      https:          true
      validate_certs: false
      use_rest:       Never
  vars_files:
    - global.vars
  collections:
    - netapp.ontap

  tasks:
# Condition checks for owning SVM and non-root volumes
  - name: Get Ontap Info
    na_ontap_info:
      state:           info
      <<: *input
    register: netapp

  - name: Delete volumes of primary SVM
    na_ontap_volume:
      state:           absent
      vserver:         "{{ PRI_SVM }}"
      name:            "{{ netapp.ontap_info.volume_info[item].volume_id_attributes.name }}"
      <<: *input
    with_items:
      "{{ netapp.ontap_info.volume_info }}"
    when:
      - netapp.ontap_info.volume_info[item].volume_id_attributes.owning_vserver_name == PRI_SVM
      - netapp.ontap_info.volume_info[item].volume_id_attributes.name is not regex(".*_root")

# Condition check for presence of SVM
# FIXME - The module currently does not delete AD computer account
  - name: Delete CIFS server on primary SVM
    na_ontap_cifs_server:
      state:                 absent
      name:                  "{{ PRI_SVM }}"
      vserver:               "{{ PRI_SVM }}"
      domain:                "{{ PRI_AD_DOMAIN }}"
      admin_user_name:       "{{ PRI_AD_USER }}"
      admin_password:        "{{ PRI_AD_PASS }}"
      <<: *input
    when:
      - netapp.ontap_info.vserver_info[PRI_SVM] is defined

  - name: Delete primary SVM
    na_ontap_svm:
      state:                 absent
      name:                  "{{ PRI_SVM }}"
      <<: *input